<?xml version="1.0"?>
<launch>
  
  <!-- 参数设置 -->
  <arg name="sensor_type" default="vlp16" doc="雷达类型: vlp16 或 hdl32e"/>
  <arg name="spawn_x" default="0.0" doc="机器人生成X位置"/>
  <arg name="spawn_y" default="0.0" doc="机器人生成Y位置"/>
  <arg name="spawn_z" default="2.0" doc="机器人生成Z位置"/>
  <arg name="spawn_yaw" default="0.0" doc="机器人生成偏航角"/>
  <arg name="use_rviz" default="true" doc="是否启动RViz"/>
  
  <!-- 启动Gazebo仿真环境 -->
  <include file="$(find env_gazebo)/launch/simple_world.launch" />

  <!-- 启动雷达机器人 -->
  <include file="$(find env_gazebo)/launch/robot_spawn.launch">
    <arg name="sensor_type" value="$(arg sensor_type)"/>
    <arg name="spawn_x" value="$(arg spawn_x)"/>
    <arg name="spawn_y" value="$(arg spawn_y)"/>
    <arg name="spawn_z" value="$(arg spawn_z)"/>
    <arg name="spawn_yaw" value="$(arg spawn_yaw)"/>
  </include>
  
  <!-- 启动机器人状态发布器 - 发布机器人内部关节的TF -->
  <node name="robot_state_publisher" 
        pkg="robot_state_publisher" 
        type="robot_state_publisher"
        output="screen">
    <param name="publish_frequency" value="50.0"/>
  </node>
  
  <!-- 加载关节控制器配置 -->
  <rosparam file="$(find env_gazebo)/cfg/gimbal_controllers.yaml" command="load"/>
  
  <!-- 启动控制器 -->
  <node name="controller_spawner" 
        pkg="controller_manager" 
        type="spawner"
        respawn="false"
        output="screen"
        args="joint_state_controller
              gimbal_yaw_position_controller
              gimbal_pitch_position_controller
              gimbal_camera_position_controller"/>
  
  <!-- 启动云台控制节点（控制云台和机器人位置） -->
  <node name="gimbal_controller" 
        pkg="env_gazebo" 
        type="gimbal_controller.py"
        output="screen"/>
  
  <!-- 从 Gazebo 模型状态实时发布 TF: map -> odom -> base_link -->
  <node name="gazebo_tf_publisher" 
        pkg="env_gazebo" 
        type="gazebo_tf_publisher.py"
        output="screen">
    <param name="robot_model_name" value="robot"/>
    <param name="world_frame" value="map"/>
    <param name="odom_frame" value="odom"/>
    <param name="base_frame" value="base_link"/>
  </node>
  
  <!-- 启动RViz可视化 (可选) -->
  <group if="$(arg use_rviz)">
    <node name="rviz" 
          pkg="rviz" 
          type="rviz" 
          args="-d $(find env_gazebo)/rviz/lidar_visualization.rviz"/>
  </group>

</launch>